library(readxl)
Importaciones <- read_excel("Importaciones.xlsx")
View(Importaciones)
cor(Importaciones)
Importaciones
#Armar matriz X
x<-matrix(c(Importaciones$Colombia,Importaciones$Brasil,Importaciones$Chile,
Importaciones$Argentina,Importaciones$Ecuador,Importaciones$Peru),20,3)
x
#Armar matriz X
x<-matrix(c(Importaciones$Colombia,Importaciones$Brasil,Importaciones$Chile,
Importaciones$Argentina,Importaciones$Ecuador,Importaciones$Peru),20,6)
x
View(Importaciones)
#Matriz de correlaciones
cor(x)
## Función para sd (1/n)
sd2 <- function (x) {
sqrt(sum((x - mean(x))^2) / (length(x)))
}
cor(Importaciones)
Importaciones
x0<-Importaciones$Año
x1<-Importaciones$Colombia
x2<-Importaciones$Brasil
x3<-Importaciones$Chile
x4<-Importaciones$Argentina
x5<-Importaciones$Ecuador
x6<-Importaciones$Peru
z1 <- (x1 - mean(x1))/sd2(x1)
sum(x1)
#Se carga la base de datos
library(readxl)
Importaciones <- read_excel("Importaciones.xlsx")
View(Importaciones)
Importaciones
## Función para sd (1/n)
sd2 <- function (x) {
sqrt(sum((x - mean(x))^2) / (length(x)))
}
x0<-Importaciones$Año
x1<-Importaciones$Colombia
sum(x1)
library(readxl)
Importaciones <- read_excel("Importaciones.xlsx",
col_types = c("numeric", "numeric", "numeric",
"numeric", "numeric", "numeric",
"numeric"))
View(Importaciones)
#Se carga la base de datos
library(readxl)
Importaciones <- read_excel("Importaciones.xlsx",
col_types = c("numeric", "numeric", "numeric",
"numeric", "numeric", "numeric",
"numeric"))
Importaciones
Importaciones
View(Importaciones)
Importaciones
## Función para sd (1/n)
sd2 <- function (x) {
sqrt(sum((x - mean(x))^2) / (length(x)))
}
x0<-Importaciones$Año
x1<-Importaciones$Colombia
x2<-Importaciones$Brasil
x3<-Importaciones$Chile
x4<-Importaciones$Argentina
x5<-Importaciones$Ecuador
x6<-Importaciones$Peru
sum(x1)
z1 <- (x1 - mean(x1))/sd2(x1)
z2 <- (x2 - mean(x2))/sd2(x2)
z3 <- (x3 - mean(x3))/sd2(x3)
z4 <- (x4 - mean(x4))/sd2(x4)
z5 <- (x5 - mean(x5))/sd2(x5)
z6 <- (x6 - mean(x6))/sd2(x6)
Z <- matrix(c(z1,z2,z3,z5,z6),20,6)
Z <- matrix(c(z1,z2,z3,z4,z5,z6),20,6)
Z
rr <- (t(Z)%*%Z) *(1/20) ## Matriz de Correlación
rr
R<- cor(Importaciones)
R
R<- cor(Importaciones[,-1])
R
rr
R <- (t(Z)%*%Z) *(1/20) ## Matriz de Correlación Manual
R1<- cor(Importaciones[,-1]) ## Matriz de correlación con función
dv <- eigen(R) ## Valores y Vectores propios
dv
u <- dv$vectors
l <- dv$values
sum(l)
t <- Z%*%u  ## Componentes en Rp
t
plot(t[,1],t[,2])
x11()
plot(t[,1],t[,2])
text(t[,1],t[,2],rownames(Importaciones[,-1]), cex=0.6, pos=4, col=4)
x11()
plot(t[,1],t[,2])
text(t[,1],t[,2],rownames(Importaciones[,-1]), cex=0.6, pos=4, col=4)
x11()
plot(t[,1],t[,2])
text(t[,1],t[,2],rownames(Importaciones$Año), cex=0.6, pos=4, col=4)
x11()
plot(t[,1],t[,2])
text(t[,1],t[,2],rownames(Importaciones), cex=0.6, pos=4, col=4)
#Con la función de R
library(FactoMineR)
?PCA
PCA.results <- PCA(Importaciones[,-1])
x11()
PCA.results <- PCA(Importaciones[,-1])
x11()
PCA.results <- PCA(Importaciones[,-1])
x11()
plot(t[,1],t[,2])
text(t[,1],t[,2],rownames(Importaciones), cex=0.6, pos=4, col=4)
library(factoextra)
fviz_pca_biplot(PCA.results)
x11()
fviz_pca_biplot(PCA.results)
x11()
PCA.results <- PCA(Importaciones[,-1])
#Con la función de R
library(FactoMineR)
x11()
PCA.results <- PCA(Importaciones[,-1])
PCA.results
PCA.results <- PCA(Importaciones[,-1])
PCA.results <- PCA(Importaciones[,-1])
library(factoextra)
fviz_pca_biplot(PCA.results)
x11()
fviz_pca_biplot(PCA.results)
x11()
plot(t[,1],t[,2])
text(t[,1],t[,2],rownames(Importaciones), cex=0.6, pos=4, col=4)
x11()
plot(t[,1],t[,2],xlab="Componente 1",ylab="Componente 2")
text(t[,1],t[,2],rownames(Importaciones), cex=0.6, pos=4, col=4)
R
R1
dv <- eigen(R) ## Valores y Vectores propios
u <- dv$vectors
l <- dv$values
l
u
t
x11()
plot(t[,1],t[,2],xlab="Componente 1",ylab="Componente 2")
text(t[,1],t[,2],rownames(Importaciones), cex=0.6, pos=4, col=4)
x11()
plot(t[,1],t[,2],xlab="Componente 1",ylab="Componente 2")
text(t[,1],t[,2],rownames(Importaciones$Año), cex=0.6, pos=4, col=4)
x11()
PCA.results <- PCA(Importaciones[,-1])
#Con la función de R
library(FactoMineR)
x11()
PCA.results <- PCA(Importaciones[,-1])
x11()
PCA.results <- PCA(Importaciones[,-1])
x11()
PCA.results <- PCA(Importaciones[,-1])
library(factoextra)
x11()
fviz_pca_biplot(PCA.results)
x11()
plot(t[,1],t[,2],type = "b")
text(t[,1],t[,2],x0, cex=0.6, pos=4, col=4)
x11()
plot(t[,1],t[,2],type = "b",xlab="Componente 1",ylab="Componente 2")
text(t[,1],t[,2],x0, cex=0.6, pos=1, col=4)
x11()
plot(t[,1],t[,2],type = "b",xlab="Componente 1",ylab="Componente 2")
text(t[,1],t[,2],x0, cex=0.4, pos=1, col=4)
x11()
plot(t[,1],t[,2],type = "b",xlab="Componente 1",ylab="Componente 2")
text(t[,1],t[,2],x0, cex=0.6, pos=1, col=4)
x11()
plot(t[,1],t[,2],type = "b",xlab="Componente 1",ylab="Componente 2",main = "Representación de los individuos en el primer plano factorial con sus trayectorias")
text(t[,1],t[,2],x0, cex=0.6, pos=1, col=4)
dev.new()
PCA.results <- PCA(Importaciones[,-1])
#Con la función de R
library(FactoMineR)
View(PCA.results)
PCA.results[["call"]][["ncp"]]
x11()
PCA.results <- PCA(Importaciones[,-1],ncp = 2)
library(ggplot2)
PCA.results$var
PCA.results$svd
t
PCA.results$svd
dv
x11()
PCA.results <- PCA(Importaciones[,-1],ncp = 2)
PCA.results$svd
l
prop_varianza<-l/sum(l)
prop_varianza
x11()
ggplot(data = data.frame(prop_varianza, pc = 1:6),
aes(x = pc, y = prop_varianza)) +
geom_col(width = 0.3) +
scale_y_continuous(limits = c(0,1)) +
theme_bw() +
labs(x = "Componente principal",
y = "Prop. de varianza explicada")
x11()
ggplot(data = data.frame(prop_varianza, pc = 1:6),
aes(x = pc, y = prop_varianza)) +
geom_col(width = 0.3) +
scale_y_continuous(limits = c(0,1)) +
theme_bw() +
labs(x = "Componente principal",
y = "Prop. de varianza explicada")
x11()
PCA.results <- PCA(Importaciones[,-1],ncp = 2)
PCA.results <- PCA(Importaciones[,-1],ncp = 2)
PCA.results <- PCA(Importaciones[,-1])
x11()
PCA.results <- PCA(Importaciones[,-1])
x11()
PCA.results <- PCA(Importaciones[,-1])
PCA.results <- PCA(Importaciones[,-1])$1
x11()
plot(PCA.results)
x11()
PCA.results <- PCA(Importaciones[,-1])
library(factoextra)
x11()
fviz_pca_biplot(PCA.results)
l
x11()
PCA.results <- PCA(Z)
#Con la función de R
library(FactoMineR)
x11()
PCA.results <- PCA(Z)
PCA.results <- PCA(Z)
x11()
ggplot(data = data.frame(prop_varianza, pc = 1:6),
aes(x = pc, y = prop_varianza)) +
geom_col(width = 0.3) +
scale_y_continuous(limits = c(0,1)) +
theme_bw() +
labs(x = "Componente principal",
y = "Prop. de varianza explicada")
#Varianza explicada por las componentes principales
library(ggplot2)
x11()
ggplot(data = data.frame(prop_varianza, pc = 1:6),
aes(x = pc, y = prop_varianza)) +
geom_col(width = 0.3) +
scale_y_continuous(limits = c(0,1)) +
theme_bw() +
labs(x = "Componente principal",
y = "Prop. de varianza explicada")
read.table("ejemploACP1.txt",header=T,sep="",dec=".",row.names=1)->data1
attach(data1)
n1.2 <- sqrt(1/20)
N1.2 <- diag(n1.2,20,20)
ZZt <- N1.2%*%Z%*%t(Z)%*%N1.2
ln  <- eigen(ZZt)$values
ln
V
V <- eigen(ZZt)$vectors
V
R
Tn <- t(Z)%*%N1.2%*%V ## Componentes en Rn
Tn
rownames(Tn) <- colnames(Importaciones[,-1])
Tn
x11()
plot(Tn[,1],Tn[,2])
text(Tn[,1],Tn[,2],colnames(Importaciones[,-1]), cex=1, pos=4, col=4)
x11()
plot(Tn[,1],Tn[,2])
text(Tn[,1],Tn[,2],colnames(Importaciones[,-1]), cex=1, pos=2, col=4)
x11()
plot(Tn[,1],Tn[,2])
text(Tn[,1],Tn[,2],colnames(Importaciones[,-1]), cex=1, pos=3, col=4)
x11()
plot(Tn[,1],Tn[,2])
text(Tn[,1],Tn[,2],colnames(Importaciones[,-1]), cex=1, pos=1, col=4)
x11()
par(mfrow=c(1,2))
plot(t[,1],t[,2],ylim=c(-2,2),xlim=c(-2,2))
text(t[,1],t[,2],rownames(data1), cex=0.6, pos=4, col=4)
plot(Tn[,1],Tn[,2],xlim=c(-1,1),ylim=c(-1,1))
text(Tn[,1],Tn[,2],colnames(data1[,-4]), cex=1, pos=4, col=4)
library(ade4)
ACPCl2 <- dudi.pca(Importaciones[,-1],nf=5)
x11()
ACPCl2 <- dudi.pca(Importaciones[,-1],nf=5)
biplot(ACPCl2)
ACPCl2 <- dudi.pca(Importaciones[,-1],nf=5)
x11()
par(mfrow=c(1,2))
plot(t[,1],t[,2],ylim=c(-2,2),xlim=c(-2,2))
text(t[,1],t[,2],rownames(Importaciones), cex=0.6, pos=4, col=4)
plot(Tn[,1],Tn[,2],xlim=c(-1,1),ylim=c(-1,1))
text(Tn[,1],Tn[,2],colnames(Importaciones[,-1]), cex=1, pos=4, col=4)
x11()
par(mfrow=c(2,2))
plot(t[,1],t[,2],ylim=c(-4,4),xlim=c(-4,4))
text(t[,1],t[,2],rownames(Importaciones), cex=0.6, pos=4, col=4)
plot((-1)*Tn[,1],(-1)*Tn[,2],xlim=c(-1,1),ylim=c(-1,1))
text((-1)*Tn[,1],(-1)*Tn[,2],colnames(Importaciones[,-1]), cex=1, pos=4, col=4)
x11()
plot(t[,1],t[,2],ylim=c(-4,4),xlim=c(-4,4))
text(t[,1],t[,2],rownames(Importaciones), cex=0.6, pos=4, col=4)
text((-sqrt(3))*Tn[,1],(-sqrt(3))*Tn[,2],colnames(Importaciones[,-1]), cex=1, pos=4, col=2)
abline(h=0,col=1,lty=2)
abline(v=0,col=1,lty=2)
#CON FACTOMINER
library(FactoMineR)
PCA.results <- PCA(Importaciones[,-1])
PCA.results
PCA.results$eig
PCA.results$cor
PCA.results$var$cor
PCA.results$ind$coord
PCA.results$eig
PCA.results <- PCA(Importaciones[,-1])
PCA.results$var
PCA.results
PCA.results$var
ZZt
ZZt
ln
V
ZZt
ln
V
V
Tn
x11()
plot(Tn[,1],Tn[,2])
text(Tn[,1],Tn[,2],colnames(Importaciones[,-1]), cex=1, pos=1, col=4)
x11()
plot(Tn[,1],Tn[,2])
text(Tn[,1],Tn[,2],colnames(Importaciones[,-1]), cex=0.8, pos=1, col=4)
x11()
plot(Tn[,1],Tn[,2])
text(Tn[,1],Tn[,2],colnames(Importaciones[,-1]), cex=0.8, pos=0.5, col=4)
x11()
plot(Tn[,1],Tn[,2])
text(Tn[,1],Tn[,2],colnames(Importaciones[,-1]), cex=1, pos=1, col=4)
x11()
plot(Tn[,1],Tn[,2],xlab = "Componente 1",ylab = "Componente 2")
text(Tn[,1],Tn[,2],colnames(Importaciones[,-1]), cex=1, pos=1, col=4)
x11()
par(mfrow=c(1,2))
plot(t[,1],t[,2],ylim=c(-2,2),xlim=c(-2,2))
text(t[,1],t[,2],rownames(Importaciones), cex=0.6, pos=4, col=4)
plot(Tn[,1],Tn[,2],xlim=c(-1,1),ylim=c(-1,1))
text(Tn[,1],Tn[,2],colnames(Importaciones[,-1]), cex=1, pos=4, col=4)
PCA.results?
?PCA.results
PCA.results
PCA.results$var
PCA.results$ind
PCA.results$ind
PCA.results$var
PCA.results$ind
PCA.results$ind
PCA.results
PCA.results$ind
t(PCA.results$ind$cos2)
PCA.results$ind
PCA.results$var
PCA.results$var
PCA.results$ind
PCA.results$ind
PCA.results$var
summary(Importaciones)
sd(Importaciones[,1])
sd(Importaciones[,2])
sd(Importaciones)
Importaciones[,2])
Importaciones[,2]
sd(Importaciones[,2])
sd(Importaciones[,3])
sd(Importaciones[,4])
sd(Importaciones[,5])
sd(Importaciones[,6])
sd(Importaciones[,7])
PCA.results$var
PCA.results$ind
PCA.results$var
#Construcción Indice
PCA.results$var$coord
#Construcción Indice
PCA.results$var$coord[,1]
#Construcción Indice
I=PCA.results$var$coord[,1]%*%Importaciones[1,]
Importaciones[1,]
#Construcción Indice
I=PCA.results$var$coord[,1]%*%Importaciones[1,-1]
Importaciones[1,-1]
#Construcción Indice
I=PCA.results$var$coord[,1]%*%t(Importaciones[1,-1])
I
#Construcción Indices por año:
I=PCA.results$var$coord[,1]%*%t(Importaciones[,-1])
I
cite(FactoMineR)
cite('FactoMineR')
citation("FactoMineR")
citation("factoextra")
citation("ggplot2")
citation("readxl")
x11()
hist(I)
I
min(I)
max(I)
max(I)-min(I)
I/max(I)-min(I)
I/(max(I)-min(I))
I-min(I)/(max(I)-min(I))
(I-min(I))/(max(I)-min(I))
I
(I-min(I))/(max(I)-min(I))*100 #Reescalado de indices
Ie=(I-min(I))/(max(I)-min(I))*100 #Reescalado de indices
x11()
hist(Ie)
x11()
hist(I)
I
Ie
